getwd()
setwd("../Documents/RReportCrashCourse/")
ls()
dir()
library(datasets)
library(dplyr)
library(ggplot2)
library(devtools)
library(reshape2)
library(rmarkdown)
library(knitr)
library(plotly)
packages_w1 <- c("rvest", "stringr", "selectr", "quantmod", "devtools", "rjson", "jsonlite", "rlist", "magrittr", "pipeR")
packages_w2 <- c("rJava", "dplyr", "data.table", "ROracle", "RODBC", "RJDBC", "RMySQL", "RSQLite", "XLConnect", "gdata", "xlsx", "readxl")
packages_w3 <- c("ggplot2", "shiny", "rmarkdown", "circlize", "dygraphs", "plotly")
packages_w4 <- c("Lahman", "e1071", "jiebaR", "xgboost", "irlba", "LiblineaR", "SparseM", "xgboost", "tm", "tmcn", "wordcloud", "koRpus", "Rweibo", "openNLP", "twitteR", "openNLPdata", "ROAuth", "corpora", "languageR", "zipfR")
packages <- c(packages_w1, packages_w2, packages_w3, packages_w4)
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())),repos="http://cran.r-project.org")
}
library(devtools)
github_Packages <- c("ramnathv/slidifyLibraries", "ramnathv/slidify", "rstudio/shinyapps", "renkun-ken/formattable")
github_PackagesName <- sapply(strsplit(github_Packages,"/"),function(x)x[2])
if (length(setdiff(github_PackagesName, rownames(installed.packages()))) > 0) {
index <- match(x = setdiff(github_PackagesName, rownames(installed.packages())), table = github_PackagesName)
install_github(github_Packages[index])
}
library(datasets)
library(dplyr)
library(ggplot2)
library(devtools)
library(reshape2)
library(rmarkdown)
library(knitr)
library(plotly)
library(datasets);library(dplyr);library(ggplot2);library(devtools);library(reshape2)
getwd()
load("data/datasets.rda")
ls()
quartet
quartet %>%
group_by(set) %>%
summarize(mean(x),sd(x),mean(y),sd(y),cor(x,y))
Cl_info %>%
group_by(bank_nm) %>%
summarise(mean(mortgage_cnt))
library(ggplot2)
p = ggplot(quartet, aes(x, y)) + geom_point()
p = p + geom_smooth(method = lm, se = FALSE)
p = p + facet_wrap(~set)
p
ls(pattern = '^geom_', env = as.environment('package:ggplot2'))
ls(pattern = '^stat_', env = as.environment('package:ggplot2'))
dim(creditData)
# show 資料欄位
names(creditData)
# Glance：窺一窺
head(creditData,5)
tail(creditData,5)
str(creditData)
unique(creditData$月份)
credit <- creditData
# 更改資料格式
credit$月份 <- as.character(credit$月份)
credit$月份 <- ifelse(test = credit$月份 == "更新_10", yes = "10405", no = credit$月份)
credit$月份 <- ifelse(test = credit$月份 == "附表4_1", yes = "10311", no = credit$月份)
unique(credit$月份)
credit <- creditData
credit$月份 <- as.character(credit$月份)
credit$月份 <- ifelse(test = credit$月份 == "更新_10", yes = "10405", no = credit$月份)
unique(credit$月份)
page(credit)
unique(creditData$月份)
View(credit)
head(credit)
head(creditData)
head(Cl_info)
bank_nm2 <- iconv(Cl_info$bank_nm, from = "utf8", to = "big5")
bank_nm2
session_info()
sessionInfo()
head(Cl_info)
head(creditData)
head(credit)
Cl_info$bank_nm <- iconv(Cl_info$bank_nm, from = "utf8", to = "big5")
save("data/datasets_big5.rda", list = c("Cl_info", "credit", "quartet"))
save(file = "data/datasets_big5.rda", list = c("Cl_info", "credit", "quartet"))
rm(list = ls())
load("data/datasets.rda")
rm(list = ls())
load("data/datasets_big5.rda")
head(credit)
head(Cl_info)
load("data/datasets_big5.rda")
rm(list = ls())
load("data/datasets_big5.rda")
getwd()
cd ..
iconv(credit[,1],from = "utf8", to = "big5")
credit[,1] <- iconv(credit[,1],from = "utf8", to = "big5")
View(credit)
names(credit)
colnames(credit)
colnames(credit)[1] <- "月份"
View(Cl_info)
View(quartet)
save(c(Cl_info,credit,quartet),file = "RReportCrashCourse/data/datasets_big5.rda")
save(Cl_info,credit,quartet,file = "RReportCrashCourse/data/datasets_big5.rda")
save(Cl_info,credit,quartet,file = "RReportCrashCourse/data/datasets_big5.rda")
library(datasets);library(dplyr);library(ggplot2);library(devtools);library(reshape2)
library(datasets);library(dplyr);library(ggplot2);library(devtools);library(reshape2);library(plotly)
getwd()
setwd("RReportCrashCourse")
packages_w1 <- c("rvest", "stringr", "selectr", "quantmod", "devtools", "rjson", "jsonlite", "rlist", "magrittr", "pipeR")
packages_w2 <- c("rJava", "dplyr", "data.table", "ROracle", "RODBC", "RJDBC", "RMySQL", "RSQLite", "XLConnect", "gdata", "xlsx", "readxl")
packages_w3 <- c("ggplot2", "shiny", "rmarkdown", "circlize", "dygraphs", "plotly")
#packages_w4 <- c("Lahman", "e1071", "jiebaR", "xgboost", "irlba", "LiblineaR", "SparseM", "xgboost", "tm", "tmcn", "wordcloud", "koRpus", "Rweibo", "openNLP", "twitteR", "openNLPdata", "ROAuth", "corpora", "languageR", "zipfR")
packages <- c(packages_w1, packages_w2, packages_w3, packages_w4)
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())),repos="http://cran.r-project.org")
}
library(devtools)
github_Packages <- c("ramnathv/slidifyLibraries", "ramnathv/slidify", "rstudio/shinyapps", "renkun-ken/formattable")
github_PackagesName <- sapply(strsplit(github_Packages,"/"),function(x)x[2])
if (length(setdiff(github_PackagesName, rownames(installed.packages()))) > 0) {
index <- match(x = setdiff(github_PackagesName, rownames(installed.packages())), table = github_PackagesName)
install_github(github_Packages[index])
}
install.packages("digest")
install.packages("digest")
packages_w1 <- c("rvest", "stringr", "selectr", "quantmod", "devtools", "rjson", "jsonlite", "rlist", "magrittr", "pipeR")
packages_w2 <- c("rJava", "dplyr", "data.table", "ROracle", "RODBC", "RJDBC", "RMySQL", "RSQLite", "XLConnect", "gdata", "xlsx", "readxl")
packages_w3 <- c("ggplot2", "shiny", "rmarkdown", "circlize", "dygraphs", "plotly")
#packages_w4 <- c("Lahman", "e1071", "jiebaR", "xgboost", "irlba", "LiblineaR", "SparseM", "xgboost", "tm", "tmcn", "wordcloud", "koRpus", "Rweibo", "openNLP", "twitteR", "openNLPdata", "ROAuth", "corpora", "languageR", "zipfR")
packages <- c(packages_w1, packages_w2, packages_w3, packages_w4)
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())),repos="http://cran.r-project.org")
}
library(devtools)
github_Packages <- c("ramnathv/slidifyLibraries", "ramnathv/slidify", "rstudio/shinyapps", "renkun-ken/formattable")
github_PackagesName <- sapply(strsplit(github_Packages,"/"),function(x)x[2])
if (length(setdiff(github_PackagesName, rownames(installed.packages()))) > 0) {
index <- match(x = setdiff(github_PackagesName, rownames(installed.packages())), table = github_PackagesName)
install_github(github_Packages[index])
}
packages_w1 <- c("rvest", "stringr", "selectr", "quantmod", "devtools", "rjson", "jsonlite", "rlist", "magrittr", "pipeR")
packages_w2 <- c("rJava", "dplyr", "data.table", "ROracle", "RODBC", "RJDBC", "RMySQL", "RSQLite", "XLConnect", "gdata", "xlsx", "readxl")
packages_w3 <- c("ggplot2", "shiny", "rmarkdown", "circlize", "dygraphs", "plotly")
#packages_w4 <- c("Lahman", "e1071", "jiebaR", "xgboost", "irlba", "LiblineaR", "SparseM", "xgboost", "tm", "tmcn", "wordcloud", "koRpus", "Rweibo", "openNLP", "twitteR", "openNLPdata", "ROAuth", "corpora", "languageR", "zipfR")
packages <- c(packages_w1, packages_w2, packages_w3, packages_w4)
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())),repos="http://cran.r-project.org")
}
library(devtools)
github_Packages <- c("ramnathv/slidifyLibraries", "ramnathv/slidify", "renkun-ken/formattable")
github_PackagesName <- sapply(strsplit(github_Packages,"/"),function(x)x[2])
if (length(setdiff(github_PackagesName, rownames(installed.packages()))) > 0) {
index <- match(x = setdiff(github_PackagesName, rownames(installed.packages())), table = github_PackagesName)
install_github(github_Packages[index])
}
dir()
install.packages("digest")
install.packages("digest")
library(digest)
packages_w1 <- c("rvest", "stringr", "selectr", "quantmod", "devtools", "rjson", "jsonlite", "rlist", "magrittr", "pipeR")
packages_w2 <- c("rJava", "dplyr", "data.table", "ROracle", "RODBC", "RJDBC", "RMySQL", "RSQLite", "XLConnect", "gdata", "xlsx", "readxl")
packages_w3 <- c("ggplot2", "shiny", "rmarkdown", "circlize", "dygraphs", "plotly")
#packages_w4 <- c("Lahman", "e1071", "jiebaR", "xgboost", "irlba", "LiblineaR", "SparseM", "xgboost", "tm", "tmcn", "wordcloud", "koRpus", "Rweibo", "openNLP", "twitteR", "openNLPdata", "ROAuth", "corpora", "languageR", "zipfR")
packages <- c(packages_w1, packages_w2, packages_w3, packages_w4)
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())),repos="http://cran.r-project.org")
}
library(devtools)
github_Packages <- c("ramnathv/slidifyLibraries", "ramnathv/slidify", "renkun-ken/formattable")
github_PackagesName <- sapply(strsplit(github_Packages,"/"),function(x)x[2])
if (length(setdiff(github_PackagesName, rownames(installed.packages()))) > 0) {
index <- match(x = setdiff(github_PackagesName, rownames(installed.packages())), table = github_PackagesName)
install_github(github_Packages[index])
}
